{"name":"Hemingway","tagline":"hemingway is a simple and easy to use spear phishing helper","body":"##Introduction\r\nThis tool was built to allow simpler campaigns of phishing. It does not try to resolve issues with SMTP relaying or reputation but rather to allow a penetration tester or red team member to create a phishing campaign with a ready made server for the phishing. We also assume that if you are dealing with anti-phishing components you have already mapped their rules. \r\nOriginal repository and updates will be available at <https://github.com/ytisf/hemingway>\r\n\r\n##Usage\r\nFor now, Hemingway will not get a configuration file from the user but will rather work with a template. \r\nThe ***example.conf*** file in the ***confs*** is currently available for example. The configuration file, however, is not the only files required but also the ***sample_conf*** folder which we'll cover in a minute. \r\n\r\n\t[server]\r\n\taddress: 192.168.10.80\r\n\tport: 25\r\n\t\r\n\t[phish]\r\n\taddresses_csv: sample_conf/addresses.csv\r\n\thtml_body: sample_conf/body.html\r\n\ttxt_body: sample_conf/body.txt\r\n\tsubject: What are you doing here?\r\n\tattachments: sample_conf/body.html, sample_conf/body.txt\r\n\r\nThis file is pretty straight and forward. It will give Hemingway the information it needs for the phishing campaign. Which files to attach (separated by a ',' which means as much files as you want), subject of the email and HTML and TXT body. \r\nNow let's have a look at the addresses file ***sample_conf/addresses.csv***:\r\n\r\n\tBill Gates <Bill.Gates@microsoft.com>;tisf@mailinator.com\r\n\tRoger Waters <rogers@p-floyd.com>;tisf@mailinator.com\r\n\tJohn Cleese <john.c@python.com>;tisf@mailinator.com\r\n\tDouglas Adams <adams@hhgttu.org>;tisf@mailinator.com\r\n\tKarl Marx <everyone@state.com>;tisf@mailinator.com\r\n\r\nAs you can see, not much to say here as well. On the left will be the addresses for the spoofed sender and on the right the addresses of the victims. \r\n\r\n**HTML**\r\nWhen you are creating you HTML body please remember that each image you embed will later be attached to the body and chagned to a CID so the recipients' email clients' will be able to interpret those images. Keep the images in the body of the email for the regex to find and store the images at the same folder as the HTML body is at, aka ***sample_conf***.\r\n\r\n##File Structure\r\n\r\n###confs\r\nThis folder holds the configuration files and in future will hold a few templates. Currently only holding ***example.conf***\r\n\r\n###includes\r\nThis folders holds the core of Hemingway\r\n* email_modules.py - ***As it says. This module will manage, build and send the emails.***\r\n* when_things_go_south.py - ***Error handler. A big pile of mess. ***\r\n###sample_conf\r\n* addresses.csv - ***the address list as described earlier. ***\r\n* body.html - ***the mail HTML body. this one will be parsed for the images attached. ***\r\n* body.txt - ***the alternative text body ***\r\n* url.jpg - ***an in-body image just for an example ***\r\n\r\n##Future Change Log\r\n- [ ] Add support for mail server authentication.\r\n- [ ] Add simpler HTML interface.\r\n- [ ] Comprehensive support for logging and summery.\r\n\r\n##License (GPLv3)\r\nHemingway - A Phishing Campaign Helper\r\nCopyright (C) 2014  Yuval tisf Nativ\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n\r\n","google":"UA-53267734-6","note":"Don't delete this file! It's used internally to help with page regeneration."}